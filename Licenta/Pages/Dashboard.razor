@page "/dashboard"
@using Licenta.Models
@using Licenta.Services
@inject EmployeeServices _employeeServices
@inject ProjectServices _projectServices
@inject EmployeeProjectServices _employeeProjectServices
@inject DepartmentServices _departmentServices
<div class="container">
        <div class="row">
            <div class="col-sm-12 col-lg-6 offset-lg-3 my-5">
            <RadzenCard class="w-100 mb-4" >
                <RadzenCheckBox @bind-Value="@showDataLabels" Name="dataLabels"></RadzenCheckBox>
                <RadzenLabel Text="Show Data Labels" Component="dataLabels" Style="margin-left: 8px; vertical-align: middle;" />
            </RadzenCard>
            <RadzenChart>
                <RadzenPieSeries Data="@test" Title="Test" CategoryProperty="Quarter" ValueProperty="Revenue">
                    <RadzenSeriesDataLabels Visible="@showDataLabels" />
                </RadzenPieSeries>
            </RadzenChart>
        </div>
    </div>
</div>



@code {
    bool showDataLabels = false;
    List<EmployeeModel> empList;
    IEnumerable<ProjectModel> projectList;
    IEnumerable<EmployeeProjectModel> employeeProjectServices;
    IEnumerable<DepartmentModel> departmentList;
    List<DataTest> test;

    protected override async Task OnInitializedAsync()
    {
        empList = await this._employeeServices.GetAllEmployees();
        projectList = await this._projectServices.GetAllProjects();
        employeeProjectServices = await this._employeeProjectServices.GetAllEmployeesProjects();
        departmentList = await this._departmentServices.GetAllDepartments();
        if(departmentList != null)
        {
            foreach (var item in departmentList)
            {
                DataTest t = new DataTest();
                t.NrAngajati = empList.Where(x => x.DepartmentID == item.DepartmentID).Distinct().Count();
                t.Departament = item.DepartmentName;
                test.Append(t);
            }
        }
    }

    class DataTest
    {
        public int NrAngajati { get; set; }
        public string Departament { get; set; }
    }



    class DataItem
    {
        public string Quarter { get; set; }
        public double Revenue { get; set; }
    }

    DataItem[] revenue = new DataItem[] {
        new DataItem
        {
            Quarter = "Q1",
            Revenue = 30000
        },
        new DataItem
        {
            Quarter = "Q2",
            Revenue = 40000
        },
        new DataItem
        {
            Quarter = "Q3",
            Revenue = 50000
        },
        new DataItem
        {
            Quarter = "Q4",
            Revenue = 80000
        },
    };
}