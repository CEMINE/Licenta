@page "/detaliiangajat"
@page "/detaliiangajat/{EmployeeID:int}"
@using Licenta.Models
@using Licenta.Services
@using System.Data
@using System.Diagnostics
@inject DepartmentServices _departmentServices
@inject JobServices _jobServices
@inject EmployeeServices _employeeServices
@inject EmployeeProjectServices _employeeProjectServices
@inject ProjectServices _projectServices
@inject IDialogService DialogAlert
@inject NavigationManager navManager

<div class="row">
    <div class="col">
        <h1 style="text-align:center;">Detalii angajat</h1>
    </div>
</div>
<div class="row">
    <div class="col mt-5">
        <div class="container container-fluid">
            <div class="nume">
                <h6><b>Nume:</b> @emp.LastName</h6>
            </div>
            <div class="prenume">
                <h6><b>Prenume:</b> @emp.FirstName</h6>
            </div>
            <div class="varsta">
                <h6><b>Varsta</b> @emp.Age</h6>
            </div>
            <div class="data-nasterii">
                <h6><b>Data nasterii</b> @emp.BirthDate.ToShortDateString()</h6>
            </div>
            <div class="data-angajarii">
                <h6><b>Data angajarii</b> @emp.HireDate.ToShortDateString()</h6>
            </div>
            <div class="departament">
                <h6><b>ID Departament / Departament:</b> @emp.DepartmentID / @depName</h6>
            </div>
            <div class="job">
                <h6><b>Id Job / Titlu job:</b> @emp.JobID / @jobTitle</h6>
            </div>
            <div class="salariu">
                <h6><b>salariu:</b> @emp.Salary </h6>
            </div>
            <div class="proiecte">
                <h6><b>Proiect(e)</b></h6>
                @if(employeeProjectList == null || projectList == null)
                {
                    <div class="spinner">
                    </div>
                }
                else
                {
                    <ul class="list-group">
                        @foreach(var project in employeeProjectList)
                        {
                            <li class="list-group-item" style="width: 20vw;">@project.ProjectId / @projectList.Where(x => x.ProjectID == project.ProjectId).Select(z => z.ProjectName).First()</li>
                        }
                    </ul>
                    
                }
            </div>
            <div class="butoane">
                <RadzenButton Text="Edit" ButtonStyle="ButtonStyle.Success" Shade="Shade.Dark" Icon="build" Click="@(()=> EditEmployeeProject(EmployeeID))" />
                <RadzenButton Text="Fluturas salariu" Icon="account_balance_wallet" ButtonStyle="ButtonStyle.Primary" Shade="Shade.Default" Click="@(() => NavigateToPayslip(EmployeeID))" />
            </div>
            
            
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int EmployeeID { get; set; }

    EmployeeModel emp = new EmployeeModel();
    IEnumerable<DepartmentModel> departmentList;
    IEnumerable<JobModel> jobList;
    IEnumerable<EmployeeProjectModel> employeeProjectList;
    IEnumerable<ProjectModel> projectList;
    string depName; 
    string jobTitle; 

    protected override async Task OnInitializedAsync()
    {
        emp = await this._employeeServices.GetEmployeeById(EmployeeID);
        departmentList = await this._departmentServices.GetAllDepartments();
        jobList = await this._jobServices.GetAllJobs();
        depName = departmentList.Where(x => x.DepartmentID == emp.DepartmentID).Select(d => d.DepartmentName).First();
        jobTitle = jobList.Where(x => x.JobID == emp.JobID).Select(j => j.JobTitle).First();
        employeeProjectList = await this._employeeProjectServices.GetEmployeeProjectsById(EmployeeID);
        projectList = await this._projectServices.GetAllProjects();
        //Debug.WriteLine($"emp id {employee.EmployeeID} / {EmployeeID}");
        this.StateHasChanged();
    }

    public void EditEmployeeProject(int empId)
    {
        navManager.NavigateTo($"/updateproiectangajat/{EmployeeID}");
    }

    public void NavigateToPayslip(int empId)
    {
        navManager.NavigateTo($"/payslip/{EmployeeID}");
    }



}
